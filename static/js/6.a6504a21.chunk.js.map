{"version":3,"sources":["components/CompanyCard/index.js","compositions/Hiring/index.js","pages/Hiring/index.js"],"names":["CompanyCard","company","isHiring","isEmpty","jobs","Flag","Section","modifiers","companyName","Divider","className","industry","location","href","website","rel","type","github","map","job","key","title","url","description","Hiring","companies","reduce","acc","concat","getHiringCompanies","Cell","HiringWithData","componentProps","CompaniesContext","Helmet","name","content"],"mappings":"4HAAA,0DA2EeA,UApEf,YAAmC,IAAZC,EAAW,EAAXA,QACfC,GAAYC,IAAQF,EAAQG,MAElC,OACE,kBAAC,IAAD,KACGF,GACC,kBAAC,IAAKG,KAAN,KACE,kBAAC,IAAD,gBAGJ,kBAAC,IAAKC,QAAN,CAAcC,UAAW,CAAC,SACxB,kBAAC,IAAD,KAAKN,EAAQO,cAEf,kBAAC,IAAKC,QAAN,MACA,kBAAC,IAAKH,QAAN,KACE,kBAAC,IAAD,CAAGC,UAAW,CAAC,QAAS,cACtB,kBAAC,IAAD,CAAMG,UAAU,cAAcH,UAAW,CAAC,cAC1C,kBAAC,IAAD,CAAMA,UAAW,CAAC,eAAgBN,EAAQU,WAE5C,kBAAC,IAAD,CAAGJ,UAAW,CAAC,QAAS,cACtB,kBAAC,IAAD,CAAMG,UAAU,wBAAwBH,UAAW,CAAC,cACpD,kBAAC,IAAD,CAAMA,UAAW,CAAC,eAAgBN,EAAQW,WAE5C,kBAAC,IAAD,CAAGL,UAAW,CAAC,QAAS,cACtB,kBAAC,IAAD,CAAMG,UAAU,eAAeH,UAAW,CAAC,cAC3C,kBAAC,IAAD,CACEM,KAAMZ,EAAQa,QACdP,UAAW,CAAC,cACZQ,IAAI,WACJC,KAAK,UAEJf,EAAQa,UAGb,kBAAC,IAAD,CAAGP,UAAW,CAAC,QAAS,cACtB,kBAAC,IAAD,CAAMG,UAAU,gBAAgBH,UAAW,CAAC,cAC5C,kBAAC,IAAD,CACEM,KAAMZ,EAAQgB,OACdV,UAAW,CAAC,cACZQ,IAAI,WACJC,KAAK,UAJP,WASDd,IACED,EAAQG,MAAQ,IAAIc,KAAI,SAAAC,GAAG,OAC1B,kBAAC,IAAD,CAAGC,IAAKD,EAAIE,MAAOd,UAAW,CAAC,QAAS,cACtC,kBAAC,IAAD,CAAMG,UAAU,mBAAmBH,UAAW,CAAC,cAC/C,kBAAC,IAAD,CACEM,KAAMM,EAAIG,IACVf,UAAW,CAAC,cACZQ,IAAI,WACJC,KAAK,UAEJG,EAAIE,YAKf,kBAAC,IAAKZ,QAAN,MACA,kBAAC,IAAKH,QAAN,CAAcC,UAAW,CAAC,SAAU,YAClC,kBAAC,IAAD,CAAGA,UAAW,CAAC,aAAc,cAAeN,EAAQsB,iB,8GCnD5D,SAASC,EAAT,GAAgC,IAAdC,EAAa,EAAbA,UAChB,OACE,kBAAC,IAAD,KAXJ,SAA4BA,GAC1B,OAAOA,EAAUC,QAAO,SAACC,EAAK1B,GAC5B,OAAIE,IAAQF,EAAQG,MACXuB,EAEFA,EAAIC,OAAO3B,KACjB,IAME4B,CAAmBJ,GAAWP,KAAI,SAAAjB,GAAO,OACxC,kBAAC,IAAK6B,KAAN,CAAWV,IAAKnB,EAAQO,aACtB,kBAACR,EAAA,QAAD,CAAaC,QAASA,SAejB8B,MARf,SAAwBC,GACtB,OACE,kBAACC,EAAA,EAAD,MACG,gBAAGR,EAAH,EAAGA,UAAH,OAAmB,kBAACD,EAAD,iBAAYQ,EAAZ,CAA4BP,UAAWA,S,OCNlDD,UAlBf,WACE,OACE,kBAAC,WAAD,KACE,kBAACU,EAAA,OAAD,KACE,2DACA,0BACEC,KAAK,cACLC,QAAO,2DAGX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAI7B,UAAW,CAAC,iBAAhB,UACA,kBAAC,EAAD","file":"static/js/6.a6504a21.chunk.js","sourcesContent":["import isEmpty from 'lodash.isempty';\nimport React from 'react';\n\nimport { Card } from 'blocks';\n\nimport { A, H3, Icon, P, Span } from 'elements';\n\nfunction CompanyCard({ company }) {\n  const isHiring = !isEmpty(company.jobs);\n\n  return (\n    <Card>\n      {isHiring && (\n        <Card.Flag>\n          <Span>Hiring</Span>\n        </Card.Flag>\n      )}\n      <Card.Section modifiers={['tall']}>\n        <H3>{company.companyName}</H3>\n      </Card.Section>\n      <Card.Divider />\n      <Card.Section>\n        <P modifiers={['short', 'textLight']}>\n          <Icon className=\"fas fa-cogs\" modifiers={['padRight']} />\n          <Span modifiers={['fontSizeSM']}>{company.industry}</Span>\n        </P>\n        <P modifiers={['short', 'textLight']}>\n          <Icon className=\"fas fa-map-marker-alt\" modifiers={['padRight']} />\n          <Span modifiers={['fontSizeSM']}>{company.location}</Span>\n        </P>\n        <P modifiers={['short', 'textLight']}>\n          <Icon className=\"fas fa-globe\" modifiers={['padRight']} />\n          <A\n            href={company.website}\n            modifiers={['fontSizeSM']}\n            rel=\"noopener\"\n            type=\"_blank\"\n          >\n            {company.website}\n          </A>\n        </P>\n        <P modifiers={['short', 'textLight']}>\n          <Icon className=\"fab fa-github\" modifiers={['padRight']} />\n          <A\n            href={company.github}\n            modifiers={['fontSizeSM']}\n            rel=\"noopener\"\n            type=\"_blank\"\n          >\n            GitHub\n          </A>\n        </P>\n        {isHiring &&\n          (company.jobs || []).map(job => (\n            <P key={job.title} modifiers={['short', 'textLight']}>\n              <Icon className=\"fas fa-briefcase\" modifiers={['padRight']} />\n              <A\n                href={job.url}\n                modifiers={['fontSizeSM']}\n                rel=\"noopener\"\n                type=\"_blank\"\n              >\n                {job.title}\n              </A>\n            </P>\n          ))}\n      </Card.Section>\n      <Card.Divider />\n      <Card.Section modifiers={['flex_1', 'scrollY']}>\n        <P modifiers={['fontSizeMD', 'textLight']}>{company.description}</P>\n      </Card.Section>\n    </Card>\n  );\n}\n\nexport default CompanyCard;\n","import isEmpty from 'lodash.isempty';\nimport React from 'react';\n\nimport { Grid } from 'blocks';\n\nimport CompanyCard from 'components/CompanyCard';\n\nimport { CompaniesContextConsumer } from 'compositions/CompaniesContext';\n\nfunction getHiringCompanies(companies) {\n  return companies.reduce((acc, company) => {\n    if (isEmpty(company.jobs)) {\n      return acc;\n    }\n    return acc.concat(company);\n  }, []);\n}\n\nfunction Hiring({ companies }) {\n  return (\n    <Grid>\n      {getHiringCompanies(companies).map(company => (\n        <Grid.Cell key={company.companyName}>\n          <CompanyCard company={company} />\n        </Grid.Cell>\n      ))}\n    </Grid>\n  );\n}\n\nfunction HiringWithData(componentProps) {\n  return (\n    <CompaniesContextConsumer>\n      {({ companies }) => <Hiring {...componentProps} companies={companies} />}\n    </CompaniesContextConsumer>\n  );\n}\n\nexport default HiringWithData;\n","import React, { Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { Article } from 'blocks';\n\nimport HiringCompanies from 'compositions/Hiring';\n\nimport { H2 } from 'elements';\n\nfunction Hiring() {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>React Companies | Hiring</title>\n        <meta\n          name=\"description\"\n          content={`A list of companies that use React JS and are hiring.`}\n        />\n      </Helmet>\n      <Article>\n        <H2 modifiers={['borderBottom']}>Hiring</H2>\n        <HiringCompanies />\n      </Article>\n    </Fragment>\n  );\n}\n\nexport default Hiring;\n"],"sourceRoot":""}